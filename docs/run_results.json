{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.9", "generated_at": "2025-08-30T22:18:35.509994Z", "invocation_id": "996e80e6-0848-422a-bc6d-42230e2515ee", "invocation_started_at": "2025-08-30T22:18:25.559254Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.529597Z", "completed_at": "2025-08-30T22:18:33.530593Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:33.531590Z", "completed_at": "2025-08-30T22:18:33.531590Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0030298233032226562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbtlearn.seed_full_moon_dates", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.533579Z", "completed_at": "2025-08-30T22:18:33.536559Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:33.537560Z", "completed_at": "2025-08-30T22:18:33.537560Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00496673583984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "snapshot.dbtlearn.scd_raw_listings", "compiled": true, "compiled_code": "\n\n\n\nSELECT * FROM AIRBNB.raw.raw_listings\n", "relation_name": "AIRBNB.DEV.scd_raw_listings", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.539561Z", "completed_at": "2025-08-30T22:18:33.552561Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:33.553565Z", "completed_at": "2025-08-30T22:18:33.553565Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015003204345703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.dbt_expectations_source_expect_column_distinct_count_to_equal_airbnb_listings_room_type__4.1e56c20a65", "compiled": true, "compiled_code": "\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \ncount(distinct room_type) = 4\n as expression\n\n\n    from AIRBNB.raw.raw_listings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.556561Z", "completed_at": "2025-08-30T22:18:33.565560Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:33.566562Z", "completed_at": "2025-08-30T22:18:33.566562Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010999441146850586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.dbt_expectations_source_expect_column_values_to_match_regex_airbnb_listings_price___0_9_0_9_.e1269b5d63", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \nregexp_instr(price, '^\\$[0-9][0-9\\.]+$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from AIRBNB.raw.raw_listings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.568561Z", "completed_at": "2025-08-30T22:18:33.574100Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:33.574100Z", "completed_at": "2025-08-30T22:18:33.574100Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006539106369018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbtlearn.dim_hosts_cleansed", "compiled": true, "compiled_code": "\n\nWITH  __dbt__cte__src_host as (\nWITH raw_host \nAS(\n    SELECT *\n    FROM AIRBNB.raw.raw_hosts\n)\n\nSELECT\n    id AS host_id,\n    name AS host_name,\n    is_superhost,\n    created_at,\n    updated_at\n\nFROM \n    raw_host\n), src_host\nAS(\n    SELECT * \n    FROM __dbt__cte__src_host\n)\n\nSELECT\n    host_id,\n    NVL(host_name,'Anonymous') AS host_name,\n    is_superhost,\n    created_at,\n    updated_at\nFROM\n    src_host", "relation_name": "AIRBNB.DEV.dim_hosts_cleansed", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.577106Z", "completed_at": "2025-08-30T22:18:33.583121Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:33.583121Z", "completed_at": "2025-08-30T22:18:33.583121Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007014751434326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbtlearn.dim_listings_cleansed", "compiled": true, "compiled_code": "\n\nWITH  __dbt__cte__src_listing as (\nWITH raw_listings \nAS(\n    SELECT *\n    FROM AIRBNB.raw.raw_listings\n)\n\nSELECT\n    id AS listing_id,\n    name AS listing_name,\n    listing_url,\n    room_type,\n    minimum_nights,\n    host_id,\n    price AS price_str,\n    created_at,\n    updated_at\nFROM \n    raw_listings\n), src_listings\nAS(\n    SELECT *\n    FROM __dbt__cte__src_listing\n)\n\nSELECT\n    listing_id,\n    listing_name,\n    room_type,\n    CASE\n        WHEN minimum_nights = 0 THEN 1\n        ELSE minimum_nights\n    END AS minimum_nights,\n    host_id,\n    REPLACE(price_str, '$') :: NUMBER(10,2) AS price,\n    created_at,\n    updated_at\nFROM\n    src_listings", "relation_name": "AIRBNB.DEV.dim_listings_cleansed", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.587127Z", "completed_at": "2025-08-30T22:18:33.609125Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:33.609125Z", "completed_at": "2025-08-30T22:18:33.609125Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02399921417236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbtlearn.fct_reviews", "compiled": true, "compiled_code": "\n\n\nWITH  __dbt__cte__src_reviews as (\nWITH raw_reviews \nAS(\n    SELECT *\n    FROM AIRBNB.raw.raw_reviews\n)\n\nSELECT\n    listing_id,\n    date AS review_date,\n    reviewer_name,\n    comments AS review_text,\n    sentiment AS review_sentiment\n\nFROM \n    raw_reviews\n), src_reviews\nAS(\n    SELECT * \n    FROM __dbt__cte__src_reviews\n)\n\nSELECT \nmd5(cast(coalesce(cast(listing_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(review_date as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(reviewer_name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(review_text as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))\n    AS review_id,\n*\nFROM src_reviews\nWHERE review_text IS NOT NULL\n\n  AND review_date > (select max(review_date) from AIRBNB.DEV.fct_reviews)\n", "relation_name": "AIRBNB.DEV.fct_reviews", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.611126Z", "completed_at": "2025-08-30T22:18:33.616221Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:33.617125Z", "completed_at": "2025-08-30T22:18:33.617125Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005999565124511719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbtlearn.dim_listings_with_hosts", "compiled": true, "compiled_code": "WITH \nl AS (\n    SELECT * FROM AIRBNB.DEV.dim_listings_cleansed\n),\nh AS (\n    SELECT * FROM AIRBNB.DEV.dim_hosts_cleansed\n)\n\nSELECT\n    l.listing_id,\n    l.listing_name,\n    l.room_type,\n    l.minimum_nights,\n    l.host_id,\n    l.price,\n    h.host_name,\n    h.is_superhost AS host_is_superhost,\n    l.created_at,\n    GREATEST(l.updated_at,h.updated_at) AS updated_at\nFROM \n    l LEFT JOIN h ON (l.host_id = h.host_id)", "relation_name": "AIRBNB.DEV.dim_listings_with_hosts", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.619126Z", "completed_at": "2025-08-30T22:18:33.627126Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:33.628129Z", "completed_at": "2025-08-30T22:18:33.628129Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010003328323364258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.accepted_values_dim_listings_cleansed_room_type__Entire_home_apt__Private_room__Shared_room__Hotel_room.a95127e3af", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        room_type as value_field,\n        count(*) as n_records\n\n    from AIRBNB.DEV.dim_listings_cleansed\n    group by room_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Entire home/apt','Private room','Shared room','Hotel room'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.630126Z", "completed_at": "2025-08-30T22:18:33.634125Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:33.634125Z", "completed_at": "2025-08-30T22:18:33.634125Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0049991607666015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.dim_listings_minimum_nights", "compiled": true, "compiled_code": "SELECT *\nFROM AIRBNB.DEV.dim_listings_cleansed\nWHERE minimum_nights<1\nLIMIT 10", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:33.636126Z", "completed_at": "2025-08-30T22:18:34.818030Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:34.818921Z", "completed_at": "2025-08-30T22:18:34.818921Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1837944984436035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.no_nulls_in_dim_listings", "compiled": true, "compiled_code": "\n    SELECT * FROM AIRBNB.DEV.dim_listings_cleansed WHERE\n    \n        LISTING_ID IS NULL OR\n      \n    \n        LISTING_NAME IS NULL OR\n      \n    \n        ROOM_TYPE IS NULL OR\n      \n    \n        MINIMUM_NIGHTS IS NULL OR\n      \n    \n        HOST_ID IS NULL OR\n      \n    \n        PRICE IS NULL OR\n      \n    \n        CREATED_AT IS NULL OR\n      \n    \n        UPDATED_AT IS NULL OR\n      \n    \n    FALSE\n  \n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:34.821918Z", "completed_at": "2025-08-30T22:18:34.830921Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:34.831920Z", "completed_at": "2025-08-30T22:18:34.831920Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012001514434814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.not_null_dim_listings_cleansed_host_id.084e4105be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect host_id\nfrom AIRBNB.DEV.dim_listings_cleansed\nwhere host_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:34.833948Z", "completed_at": "2025-08-30T22:18:34.838945Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:34.839921Z", "completed_at": "2025-08-30T22:18:34.839921Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007000446319580078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.not_null_dim_listings_cleansed_listing_id.2da437bec9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect listing_id\nfrom AIRBNB.DEV.dim_listings_cleansed\nwhere listing_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:34.842919Z", "completed_at": "2025-08-30T22:18:34.847950Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:34.848922Z", "completed_at": "2025-08-30T22:18:34.848922Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007001161575317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.positive_values_dim_listings_cleansed_minimum_nights.5dac2ba3aa", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM AIRBNB.DEV.dim_listings_cleansed\nWHERE minimum_nights<1\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:34.851921Z", "completed_at": "2025-08-30T22:18:34.859945Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:34.860923Z", "completed_at": "2025-08-30T22:18:34.860923Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010003805160522461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.relationships_dim_listings_cleansed_host_id__host_id__ref_dim_hosts_cleansed_.b53b94b2ad", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select host_id as from_field\n    from AIRBNB.DEV.dim_listings_cleansed\n    where host_id is not null\n),\n\nparent as (\n    select host_id as to_field\n    from AIRBNB.DEV.dim_hosts_cleansed\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:34.862809Z", "completed_at": "2025-08-30T22:18:34.868814Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:34.869816Z", "completed_at": "2025-08-30T22:18:34.869816Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007007122039794922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.unique_dim_listings_cleansed_listing_id.930e4e859e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    listing_id as unique_field,\n    count(*) as n_records\n\nfrom AIRBNB.DEV.dim_listings_cleansed\nwhere listing_id is not null\ngroup by listing_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:34.871814Z", "completed_at": "2025-08-30T22:18:34.876181Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:34.876181Z", "completed_at": "2025-08-30T22:18:34.876181Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006377696990966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbtlearn.mart_fullmoon_reviews", "compiled": true, "compiled_code": "\n\nWITH\nfct_reviews AS (\n    SELECT * FROM AIRBNB.DEV.fct_reviews\n),\nfull_moon_dates AS (\n    SELECT * FROM AIRBNB.DEV.seed_full_moon_dates\n)\n\nSELECT\n    r.*,\n    CASE\n        WHEN fm.full_moon_date IS NULL  THEN 'no full moon'\n        ELSE 'full moon'\n    END AS is_full_moon\nFROM\nfct_reviews r LEFT JOIN full_moon_dates fm ON(TO_DATE(r.review_date) = DATEADD(DAY,1,fm.full_moon_date)) ", "relation_name": "AIRBNB.DEV.mart_fullmoon_reviews", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:34.879218Z", "completed_at": "2025-08-30T22:18:34.883218Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:34.884213Z", "completed_at": "2025-08-30T22:18:34.884213Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0060269832611083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.consistent_created_at", "compiled": true, "compiled_code": "SELECT * \nFROM AIRBNB.DEV.dim_listings_cleansed l LEFT JOIN AIRBNB.DEV.fct_reviews r ON (l.listing_id = r.listing_id )\nWHERE r.review_date<l.created_at\nLIMIT 10", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:34.887186Z", "completed_at": "2025-08-30T22:18:34.896187Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:34.896187Z", "completed_at": "2025-08-30T22:18:34.896187Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009969711303710938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.dbt_expectations_expect_column_max_to_be_between_dim_listings_with_hosts_price__5000.3f951930ba", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and max(price) <= 5000\n)\n as expression\n\n\n    from AIRBNB.DEV.dim_listings_with_hosts\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:34.900186Z", "completed_at": "2025-08-30T22:18:34.909186Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:34.909186Z", "completed_at": "2025-08-30T22:18:34.909186Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009999752044677734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.dbt_expectations_expect_column_quantile_values_to_be_between_dim_listings_with_hosts_price__500__50__0_99.2ef2227c8b", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and percentile_cont(0.99) within group (order by price) >= 50 and percentile_cont(0.99) within group (order by price) <= 500\n)\n as expression\n\n\n    from AIRBNB.DEV.dim_listings_with_hosts\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:34.911186Z", "completed_at": "2025-08-30T22:18:35.052501Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:35.053513Z", "completed_at": "2025-08-30T22:18:35.053513Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1433265209197998, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.dbt_expectations_expect_column_values_to_be_of_type_dim_listings_with_hosts_price__NUMBER.2a6b47e720", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('LISTING_ID' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LISTING_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROOM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MINIMUM_NIGHTS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HOST_ID' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRICE' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HOST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HOST_IS_SUPERHOST' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_AT' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_AT' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PRICE'\n            and\n            relation_column_type not in ('NUMBER')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:35.057510Z", "completed_at": "2025-08-30T22:18:35.077684Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:35.078689Z", "completed_at": "2025-08-30T22:18:35.078689Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023181438446044922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbtlearn.dbt_expectations_expect_table_row_count_to_equal_other_table_dim_listings_with_hosts_source_airbnb_listings_.5d45705315", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        count(*) as expression\n    from\n        AIRBNB.DEV.dim_listings_with_hosts\n    \n\n    ),\n    b as (\n        \n    select\n        \n        count(*) * 1 as expression\n    from\n        AIRBNB.raw.raw_listings\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        \n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-30T22:18:35.080689Z", "completed_at": "2025-08-30T22:18:35.083997Z"}, {"name": "execute", "started_at": "2025-08-30T22:18:35.085005Z", "completed_at": "2025-08-30T22:18:35.085005Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005316495895385742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "analysis.dbtlearn.full_moon_no_sleep", "compiled": true, "compiled_code": "WITH mart_fullmoon_reviews\nAS (\n    SELECT * FROM AIRBNB.DEV.mart_fullmoon_reviews\n)\n\nSELECT  \n    is_full_moon,\n    review_sentiment,\n    COUNT(*) as reviews \nFROM \n    mart_fullmoon_reviews\nGROUP BY\n    is_full_moon,\n    review_sentiment\nORDER BY    \n    is_full_moon,\n    review_sentiment", "relation_name": null, "batch_results": null}], "elapsed_time": 7.7967541217803955, "args": {"require_resource_names_without_spaces": true, "defer": false, "validate_macro_args": false, "log_path": "C:\\Users\\Video\\Desktop\\course\\dbtlearn\\logs", "require_yaml_configuration_for_mf_time_spines": false, "partial_parse_file_diff": true, "print": true, "show_resource_report": false, "introspect": true, "require_generic_test_arguments_property": true, "exclude": [], "compile": true, "require_all_warnings_handled_by_warn_error": false, "which": "generate", "invocation_command": "dbt docs generate", "state_modified_compare_vars": false, "empty_catalog": false, "require_batched_execution_for_custom_microbatch_strategy": false, "log_level": "info", "static_parser": true, "select": [], "project_dir": "C:\\Users\\Video\\Desktop\\course\\dbtlearn", "require_nested_cumulative_type_params": false, "send_anonymous_usage_stats": true, "static": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "favor_state": false, "require_explicit_package_overrides_for_builtin_materializations": true, "state_modified_compare_more_unrendered_values": false, "version_check": true, "macro_debugging": false, "log_file_max_bytes": 10485760, "indirect_selection": "eager", "partial_parse": true, "quiet": false, "profiles_dir": "C:\\Users\\Video\\.dbt", "upload_to_artifacts_ingest_api": false, "show_all_deprecations": false, "strict_mode": false, "use_colors_file": true, "cache_selected_only": false, "populate_cache": true, "write_json": true, "log_format_file": "debug", "source_freshness_run_project_hooks": true, "use_fast_test_edges": false, "log_level_file": "debug", "printer_width": 80, "log_format": "default", "use_colors": true, "vars": {}, "skip_nodes_if_on_run_start_fails": false}}